# Topology
scenario_topology_file=temp/results/physicalTopo/topologies/Jellyfish_128V_30deg.topology

# Run info
seed=8798237589
run_time_s=30
# SET BY SCRIPT: run_folder_name
run_folder_base_dir=temp/results
analysis_command=python analysis/analyze_with_channel_use.py
enable_log_flow_throughput=false

# Network device
transport_layer=simple_dctcp
network_device=ecmp_switch
network_device_routing=ecmp
network_device_intermediary=identity

# Link & output port
#long_to_wireless_port=true
output_port=wireless_port
output_port_max_queue_size_bytes=150000
output_port_ecn_threshold_k_bytes=30000
link=perfect_simple
link_delay_ns=2
link_bandwidth_bit_per_ns=10

# Traffic

#traffic=poisson_arrival
#traffic_probabilities_active_fraction_is_ordered=true

#traffic_probabilities_generator=all_to_all_fraction
#traffic_probabilities_active_fraction=0.19
#traffic_lambda_flow_starts_per_s=900
#traffic_flow_size_dist=pareto
#traffic_flow_size_dist_pareto_shape=1.05
#traffic_flow_size_dist_pareto_mean_kilobytes=100

#scenario_topology_extend_with_servers=regular
#scenario_topology_extend_servers_per_tl_node=8

traffic=traffic_pair
traffic_pair_type=all_to_all
traffic_pair_flow_size_byte=50000



#traffic=poisson_arrival
#traffic_lambda_flow_starts_per_s=100
#traffic_flow_size_dist=pfabric_web_search_upper_bound
#traffic_probabilities_file=private/data/pair_distributions/projector_tors_128_probabilities.txt

enable_generate_human_readable_flow_completion_log=true

#ssh user@machine.com "cd /path/to/folder/netbench; screen -d -m ../java/jre1.8.0_131/bin/java -ea -jar NetBench.jar private/runs/10_projector/full_fat_tree_k16.properties run_folder_name=10_projector/full_fat_tree_k16_flows_${flows_per_s}_runtime_${runtime}s_ecn_threshold_${ecn_threshold}_intermediary_${intermediary}_flowlet_gap_${FLOWLET_GAP_NS} output_port_ecn_threshold_k_bytes=${ecn_threshold} traffic_lambda_flow_starts_per_s=${flows_per_s} run_time_s=${runtime} network_device_intermediary=${intermediary} FLOWLET_GAP_NS=${FLOWLET_GAP_NS}"
